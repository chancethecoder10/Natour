.row {
  max-width: $grid-width; //Si es menor ocupara el 100% del espacio
  margin: 0 auto; //Trick para centrar block elements dentro de otro block element
  //Auto busca  donde  acomodar el L y R y dsd q ambos son auto los dos seran lo mismo
  //css calculara el l y r margin y seran el mismo, entonces sera centrado

  &:not(:last-child) {
    margin-bottom: $gutter-vertical; //Espaciado a todos elementos menos ultimo
  }

  //Evita el primer row con height de 0px,todos elementos flotantes, height colapsa y se vuelve 0
  @include clearfix; //Reusable piece of code, gives back first element his complete height

  //Selector, toda clase que empiece con col- se seleccionara
  [class^="col-"] {
    float: left; //Always float to the left

    &:not(:last-child) {
      margin-right: $gutter-horizontal; //Espacio a la derecha todos elementos menos ultimo en cada row
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3); //2 gutters
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
